; to declare more loggers, 
; 1. add logger name to the loggers section. program will check if required logger name startswith declared key
; 2. specify and add formatters as needed
; 3. config logger at [logger_NAME] section. 

[loggers]
keys=src,metrics,agent

[handlers]
keys=consoleHandler,errorHandler,fileHandler,individualFileHandler

[formatters]
keys=defaultFormatter,simpleFormatter

[logger_src]
level=DEBUG
handlers=consoleHandler,errorHandler,fileHandler
propagate=0
singlefile=0 
;if we should create a single file to save its record. 0 False, 1 True

[logger_metrics]
level=DEBUG
handlers=individualFileHandler
propagate=0
singlefile=1 
;if we should create a single file to save its record.

[logger_agent]
level=DEBUG
handlers=individualFileHandler
propagate=0
singlefile=1

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=defaultFormatter
args=(sys.stdout,)

[handler_errorHandler]
class=StreamHandler
level=ERROR
formatter=defaultFormatter
args=(sys.stderr,)

[handler_fileHandler]
class=FileHandler
level=INFO
formatter=defaultFormatter
args=('%%LOG_FILE_PATH%%', 'a')

[handler_individualFileHandler]
class=FileHandler
level=INFO
formatter=simpleFormatter
args=('%%LOG_INDIVIDUAL_PATH%%', 'w')
queue=1; if we should use queuelistener to make it async
; kwargs={'filename':'%LOG_FILE_PATH%', 'mode':'w'}

[formatter_simpleFormatter]
format=%(message)s
datefmt=%Y-%m-%d %H:%M:%S

[formatter_defaultFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=%Y-%m-%d %H:%M:%S